server.port=8081

spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/b2c-dev-realm
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs

## keycloak
spring.security.oauth2.client.registration.keycloak.client-id=b2c-admin
spring.security.oauth2.client.registration.keycloak.client-secret=EKcQFbQhdwjA7slI9yqO62CGMSa3uWhX
spring.security.oauth2.client.registration.keycloak.scope=openid,profile,email
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.redirect-uri=http://localhost:8081/login/oauth2/code/keycloak
spring.security.oauth2.client.registration.keycloak.client-name=Keycloak

spring.security.oauth2.client.provider.keycloak.authorization-uri=http://localhost:8080/realms/b2c-dev-realm/protocol/openid-connect/auth
spring.security.oauth2.client.provider.keycloak.token-uri=http://localhost:8080/realms/b2c-dev-realm/protocol/openid-connect/token
spring.security.oauth2.client.provider.keycloak.user-info-uri=http://localhost:8080/realms/b2c-dev-realm/protocol/openid-connect/userinfo
spring.security.oauth2.client.provider.keycloak.jwk-set-uri=http://localhost:8080/realms/b2c-dev-realm/protocol/openid-connect/certs
spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:8080/realms/b2c-dev-realm




token.converter.principal-attribute=preferred_username
token.converter.resource-id=b2c-admin